init:
  - ps: if ($env:APPVEYOR_REPO_TAG -eq "true") { $env:TAG_VERSION = "$env:APPVEYOR_REPO_TAG_NAME.$env:APPVEYOR_BUILD_NUMBER" } else { $env:TAG_VERSION = "v1.0.0.$env:APPVEYOR_BUILD_NUMBER" }
  - ps: $env:TAG_VERSION = $env:TAG_VERSION -replace 'v',''
  - ps: Write-Host "Setting version to '$env:TAG_VERSION'"
  - ps: Update-AppveyorBuild -Version "$env:TAG_VERSION"

environment:
  matrix:
  - job_name: Windows x64 Build
    platform: x64
    appveyor_build_worker_image: Visual Studio 2022
    configuration: Release

  BugsplatDatabase: RadegastLife
  BugsplatUser: cinder@cinderblocks.biz
  PfxDownloadUrl:
    secure: T8uKu+tTR2G7LDE1zPGNOi+prl4YaKXP6DOC5eU6A14FEQkd8PFR3nQ1WMwryphJ
  PfxDownloadPasswd:
    secure: nAIqrjhaoamhiuAcae/xNw==
  PfxPassword:
    secure: +vWSGzLkiBGVIxfPb+iRtD+/maQjI2d92hN4PoNAxMc=

branches:
  except:
    - localbuilding

pull_requests:
  do_not_increment_build_number: true

build:
  project: megabolt.sln
  parallel: true
  verbosity: minimal

cache:
  - packages -> **\packages.config
  - '%LocalAppData%\NuGet\Cache'

dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'

before_build:
  - ps: util/InstallRemotePfx.ps1 -PfxDownloadUrl $env:PfxDownloadUrl -PfxDownloadUser AppVeyor -PfxDownloadPasswd $env:PfxDownloadPasswd -PfxPasswd $env:PfxPassword
  - nuget restore megabolt.sln

artifacts:
  - path: 'bin\Release\MEGAboltSetup*.msi'
    name: 'MEGAbolt Windows MSI'
    type: Auto
  - path: 'bin\Release\win-x64\*.pdb'
    name: 'Symbols'
    type: Auto
